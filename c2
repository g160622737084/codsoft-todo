#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#define PORT 12345
#define BUFFER_SIZE 1024
int main() {
int sockfd;
struct sockaddr_in server_addr; 
char buffer[BUFFER_SIZE]; 
int n;
// Create a UDP socket
if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) 
{ 
perror("socket creation failed"); 
exit(EXIT_FAILURE); 
}
// Set up the server address structure
memset(&server_addr, 0, sizeof(server_addr));
server_addr.sin_family = AF_INET; 
server_addr.sin_addr.s_addr = inet_addr("127.0.0.1"); 
// Server address 
server_addr.sin_port = htons(PORT);
while (1) {
// Read message from user 
printf("Enter message: "); 
fgets(buffer, BUFFER_SIZE, stdin); 
buffer[strcspn(buffer, "\n")] = '\0'; 
// Remove newline character
// Send message to the server
sendto(sockfd, (const char *)buffer, strlen(buffer), 0, (struct sockaddr *)&server_addr, sizeof(server_addr));
// Receive the message from the server
n=recvfrom(sockfd, (char *)buffer, BUFFER_SIZE, 0, NULL, NULL);
if (n < 0) 
{ 
perror("recvfrom failed"); 
continue; 
}
buffer[n] = '\0';
// Print received message 
printf("Server: %s\n", buffer); 
}
close(sockfd); 
return 0; 
}
